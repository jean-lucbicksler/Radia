<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>northx = 0
northy = 0
northz = 0
altitude = 0
azimuth = 0
magnitude = 0
z = 0
momentum = 0
zspeed = 0
r = 0
terrain[0,0] = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with(obj_planet) {
    if(other.id != id) {
        magnitude2 = (other.x-x)^2+(other.y-y)^2+(other.z-z)^2  //
        if(magnitude2 &lt;= 1)
        {
            other.hspeed *= -1
            other.vspeed *= -1
            other.zspeed *= -1
            other.hspeed += random(5.0) - 2.5
            other.vspeed += random(5.0) - 2.5
            other.zspeed += random(5.0) - 2.5
        } else {
            other.hspeed -= (other.x - x) / magnitude2 / 64
            other.vspeed -= (other.y - y) / magnitude2 / 64
            other.zspeed -= (other.z - z) / magnitude2 / 64
        }
    }
}*/
r += momentum
while r &gt; pi
    r -= 2*pi
while r &lt; -pi
    r += 2*pi
z += zspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(SPECTATE_CAMERA)
{
    draw_set_color(c_white)
    for(var i=1; i &lt; array_height_2d(terrain); i++)
    {
        for(var j=0; j &lt; array_length_2d(terrain,i)-2; j+=2) //improper collision checking on the last two indices and cannot cull arrays in gml.  They're garbage.
        {
            d3d_transform_set_translation(-x, -y, -z)
            d3d_transform_add_translation(0, 0, i*11/2/pi+0.5)
            d3d_transform_add_rotation_y(radtodeg(pi/2-terrain[i,j+1]))
            d3d_transform_add_rotation_z(radtodeg(terrain[i,j] + r))
            d3d_transform_add_rotation_y(radtodeg(pi/2-altitude))
            d3d_transform_add_rotation_z(radtodeg(azimuth))
            d3d_transform_add_translation(x,y,z)
            d3d_draw_block(x-0.5,y-0.5,z-0.5, x+0.5,y+0.5,z+0.5, -1,1,1)
            d3d_transform_set_identity()
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
