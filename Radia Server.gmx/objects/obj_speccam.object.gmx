<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z=0
pitch=0
dx=1 //Unit Forward Vector
dy=0
dz=0
rx=0 //Unit Right Vector
ry=-1
waluigiTime=0
d3d_start()
d3d_set_lighting(true)
d3d_light_enable(0,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(checkCtrl(global.key_fwd))
{
    x += dx
    y += dy
    z += dz
}
if(checkCtrl(global.key_bck))
{
    x -= dx
    y -= dy
    z -= dz
}
if(checkCtrl(global.key_lft))
{
    x -= rx
    y -= ry
}
if(checkCtrl(global.key_rgt))
{
    x += rx
    y += ry
}
if(display_get_width()/2 != display_mouse_get_x())
{
    direction -= radtodeg((display_mouse_get_x() - display_get_width()/2) / display_get_width()) / sens * 1000
    rx = cos(degtorad(90-direction))
    ry = sin(degtorad(90-direction))
    dz = cos(pitch)
    dx = dz*cos(degtorad(-direction))
    dy = dz*sin(degtorad(-direction))
    dz = sin(pitch)
}
if(display_get_height()/2 != display_mouse_get_y())
{
    pitch += (display_get_height()/2 - display_mouse_get_y()) / display_get_height() / sens * 1000
    if(pitch &gt; pi/2)
        pitch = pi/2
    if(pitch &lt; -pi/2)
        pitch = -pi/2
    dz = cos(pitch)
    dx = dz*cos(degtorad(-direction))
    dy = dz*sin(degtorad(-direction))
    dz = sin(pitch)
}
display_mouse_set(display_get_width()/2,display_get_height()/2)

waluigiTime++
if(waluigiTime &gt;= 32)
    waluigiTime = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_lighting(false)
texture_set_interpolation(false)
d3d_set_hidden(false)
d3d_set_projection(0,0,0,dx,dy,dz,0,0,1)
d3d_draw_ellipsoid(-2048,-2048,-2048,2048,2048,2048,sprite_get_texture(spr_background, floor(waluigiTime/4.0)),4,4,32)
texture_set_interpolation(true)
d3d_set_hidden(true)
d3d_set_lighting(true)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_light_define_point(0,x,y,z,9999999,c_white)
d3d_set_lighting(true)
d3d_set_projection(x,y,z,x+dx*100,y+dy*100,z+dz*100,0,0,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
