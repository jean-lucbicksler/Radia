<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z=0
yaw=0
pitch=0
dx=1
dy=0
dz=0
d3d_start()
d3d_set_lighting(true)
d3d_light_enable(0,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(ord('W')))
{
    x = x + dx
    y = y + dy
    z = z + dz
}
if(keyboard_check(ord('S')))
{
    x = x - dx
    y = y - dy
    z = z - dz
}
if(display_get_width()/2 != display_mouse_get_x())
{
    direction += radtodeg((display_mouse_get_x() - display_get_width()/2) / display_get_width())
    dx = cos(pitch)*cos(degtorad(direction))
    dy = cos(pitch)*sin(degtorad(direction))
}
if(display_get_height()/2 != display_mouse_get_y())
{
    pitch += (display_get_height()/2 - display_mouse_get_y()) / display_get_height()
    if(pitch &gt; pi/2)
        pitch = pi/2
    if(pitch &lt; -pi/2)
        pitch = -pi/2
    dx = cos(pitch)*cos(degtorad(direction))
    dy = cos(pitch)*sin(degtorad(direction))
    dz = sin(pitch)
}
display_mouse_set(display_get_width()/2,display_get_height()/2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_light_define_point(0,x,y,z,9999999,c_white)

d3d_set_projection(x,y,z,x+dx*100,y+dy*100,z+dz*100,0,0,1)
show_debug_message("d " + string(dx) + " " + string(dy) + " " + string(dz))
show_debug_message("p " + string(x) + " " + string(y) + " " + string(z) + " " + string(direction) + " " + string(pitch))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
